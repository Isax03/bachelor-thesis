% The Meaning of Memory Safety
@inproceedings{meaning_memory_safety,
	author = {Azevedo de Amorim, Arthur and Hri{\c{T}}cu, C{\u{a}}t{\u{a}}lin and Pierce, Benjamin C.},
	editor = {Bauer, Lujo and K{\"u}sters, Ralf},
	title = {{The Meaning of Memory Safety}},
	booktitle = {{Principles of Security and Trust}},
	year = {2018},
	publisher = {{Springer International Publishing}},
	address = {Cham},
	pages = {79--105},
	isbn = {978-3-319-89722-6}
}

% Website "The Memory Safety Continuum"
@misc{memory_safety_continuum,
	title = {{The Memory Safety Continuum}},
	author = {{Open Source Security Foundation (OpenSSF)}},
	howpublished = {\url{https://memorysafety.openssf.org/memory-safety-continuum/}},
	note = {Ultimo accesso: 26 maggio 2025}
}

% Definizione di Memory Safety secondo OpenSSF - The Memory Safety Continuum
@misc{memory_safety_continuum_definition,
	title = {{Useful Definitions}},
	author = {{Open Source Security Foundation (OpenSSF)}},
	howpublished = {\url{https://github.com/ossf/Memory-Safety/blob/main/docs/definitions.md}},
	note = {Ultimo accesso: 26 maggio 2025}
}

%
@misc{cwe_1399,
	title = {{Comprehensive Categorization: Memory Safety}},
	author = {{The MITRE Corporation}},
	howpublished = {\url{https://cwe.mitre.org/data/definitions/1399.html}},
	note = {Ultimo accesso: 13 giugno 2025}
}

% Memory Safety Without Runtime Checks or Garbage Collection
@inproceedings{memory_safety_without_runtime_checks,
	author = {Dhurjati, Dinakar and Kowshik, Sumant and Adve, Vikram and Lattner, Chris},
	title = {{Memory safety without runtime checks or garbage collection}},
	year = {2003},
	isbn = {1581136471},
	publisher = {{Association for Computing Machinery}},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/780732.780743},
	doi = {10.1145/780732.780743},
	booktitle = {{Proceedings of the 2003 ACM SIGPLAN Conference on Language, Compiler, and Tool for Embedded Systems}},
	pages = {69--80},
	numpages = {12},
	keywords = {automatic pool allocation, compilers, embedded systems, programming languages, region management, security, static analysis},
	location = {San Diego, California, USA},
	series = {LCTES '03}
}

% Microsoft "A proactive approach to more secure code" blog article
@misc{microsoft_proactive_approach,
	title = {{A proactive approach to more secure code}},
	author = {{Microsoft}},
	howpublished = {\url{https://msrc.microsoft.com/blog/2019/07/a-proactive-approach-to-more-secure-code/}},
	year = {2019},
	month = jul,
	note = {Ultimo accesso: 16 maggio 2025}
}

% "Safer with Google: Advancing Memory Safety" blog article
@misc{google_memory_safety,
	title = {{Safer with Google: Advancing Memory Safety}},
	author = {{Alex Rebert, Chandler Carruth, Jen Engel e Andy Qin}},
	journal = {{Google Security Blog}},
	howpublished = {\url{https://security.googleblog.com/2024/10/safer-with-google-advancing-memory.html}},
	year = {2024},
	month = oct,
	note = {Ultimo accesso: 20 maggio 2025}
}

% Heartbleed
@misc{heartbleed,
	title = {{Heartbleed}},
	author = {{Blackduck, Inc.}},
	howpublished = {\url{https://www.heartbleed.com/}},
	note = {Ultimo accesso: 19 maggio 2025}
}

% OWASP Best Practices
@misc{owasp_best_practices,
	title = {{Secure Coding Practice Quick-reference Guide}},
	author = {{OWASP Foundation, Inc.}},
	howpublished = {\url{https://owasp.org/www-project-secure-coding-practices-quick-reference-guide/stable-en/}},
	note = {Ultimo accesso: 14 maggio 2025}
}

% SEI CERT Coding Standard
@misc{cert_coding_standard,
	title = {{SEI CERT Coding Standard}},
	author = {{Carnegie Mellon University}},
	howpublished = {\url{https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards}},
	note = {Ultimo accesso: 14 maggio 2025}
}

% CWE Top 25 Most Dangerous Software Weaknesses
@misc{cwe_top25_2024,
	author = {{MITRE}},
	title = {{2024 CWE Top 25 Most Dangerous Software Weaknesses}},
	howpublished = {\url{https://cwe.mitre.org/top25/archive/2024/2024_cwe_top25.html}},
	year = {2024},
	note = {Ultimo accesso: 15 maggio 2025}
}

% The Case for Memory Safe Roadmaps
@misc{memory_safe_roadmaps,
	title = {{The Case for Memory Safe Roadmaps}},
	author = {{United States Cybersecurity and Infrastructure Security Agency, United States National Security Agency, United States Federal Bureau of Investigation, Australian Signals Directorate's Australian Cyber Security Centre, Canadian Centre for Cyber Security, United Kingdom National Cyber Security Centre, New Zealand National Cyber Security Centre, Computer Emergency Response Team New Zealand}},
	howpublished = {\url{https://www.cisa.gov/sites/default/files/2023-12/The-Case-for-Memory-Safe-Roadmaps-508c.pdf}},
	year = {2023},
	month = dec
}

% Come il bug di Crowdstrike ha mandato in tilt i computer di mezzo mondo
@misc{crowdstrike_bug_wired,
	title = {{Come il bug di Crowdstrike ha mandato in tilt i computer di mezzo mondo}},
	author = {{Newman Lily Hay, Burgess Matt e Greenberg Andy}},
	journal = {Wired},
	howpublished = {\url{https://www.wired.it/article/crowdstrike-microsoft-guasto-come-e-successo/}},
	year = {2024},
	month = jul,
	note = {Ultimo accesso: 20 maggio 2025}
}

% Come il bug di Crowdstrike ha mandato in tilt i computer di mezzo mondo
@misc{crowdstrike_bug_wired_cost,
	title = {{Il disastro di Crowdstrike costerà 15 miliardi alle aziende}},
	author = {González Fernanda},
	journal = {Wired},
	howpublished = {\url{https://www.wired.it/article/crowdstrike-impatto-economico-bug-microsoft/}},
	year = {2024},
	month = jul,
	note = {Ultimo accesso: 20 maggio 2025}
}

@misc{wannacry_kaspersky,
	title = {{What is WannaCry ransomware?}},
	author = {{Kaspersky}},
	howpublished = {\url{https://www.kaspersky.com/resource-center/threats/ransomware-wannacry}},
	note = {Ultimo accesso: 22 maggio 2025}
}

@misc{webaudio_uaf,
	title = {{Exploiting a textbook use-after-free security vulnerability in Chrome}},
	author = {{Man Yue Mo}},
	journal = {{GitHub Blog}},
	howpublished = {\url{https://github.blog/security/vulnerability-research/exploiting-a-textbook-use-after-free-security-vulnerability-in-chrome/}},
	year = {2020},
	month = oct,
	note = {Ultimo accesso: 24 maggio 2025}
}

@misc{null_pointer_dereference_linux,
	title = {{Linux NULL pointer dereference due to incorrect proto\_ops initialisation}},
	author = {{Julien Tinnes e Tavis Ormandy}},
	howpublished = {\url{https://blog.cr0.org/2009/08/linux-null-pointer-dereference-due-to.html}},
	year = {2009},
	month = aug,
	note = {Ultimo accesso: 19 maggio 2025}
}

@misc{security_in_sdlc,
	title = {{Integration of Security Modules in Software Development Lifecycle Phases}},
	author = {Isaac Chin Eian and Lim Ka Yong and Majesty Yeap Xiao Li and Noor Affan Bin Noor Hasmaddi and Fatima-tuz-Zahra},
	year = {2020},
	eprint = {2012.05540},
	archivePrefix = {arXiv},
	primaryClass = {cs.SE},
	url = {https://arxiv.org/abs/2012.05540}
}

@inproceedings{afl_plus_plus,
	author = {Fioraldi, Andrea and Maier, Dominik and Ei\ss{}feldt, Heiko and Heuse, Marc},
	title = {{AFL++: combining incremental steps of fuzzing research}},
	year = {2020},
	publisher = {{USENIX Association}},
	address = {USA},
	booktitle = {{Proceedings of the 14th USENIX Conference on Offensive Technologies}},
	articleno = {10},
	numpages = {1},
	series = {WOOT'20}
}

@inproceedings{qasan,
	author = {Fioraldi, Andrea and D'Elia, Daniele Cono and Querzoni, Leonardo},
	booktitle = {{2020 IEEE Secure Development (SecDev)}},
	title = {{Fuzzing Binaries for Memory Safety Errors with QASan}},
	year = {2020},
	month = sep,
	volume = {},
	number = {},
	pages = {23--30},
	doi = {10.1109/SecDev45635.2020.00019}
}

@misc{fuzzing_types,
	title = {{Alla scoperta del Fuzzing. Come scovare vulnerabilità sconosciute nei software}},
	author = {{Redazione RHC}},
	journal = {{Red Hot Cyber}},
	howpublished = {\url{https://www.redhotcyber.com/post/alla-scoperta-del-fuzzing-come-scovare-vulnerabilita-sconosciute-nei-software/}},
	year = {2024},
	month = apr,
	note = {Ultimo accesso: 20 maggio 2025}
}

@misc{rust_manual_san,
	title = {{The Rust Unstable Book}},
	author = {{The Rust Project Developers}},
	howpublished = {\url{https://doc.rust-lang.org/beta/unstable-book/compiler-flags/sanitizer.html}},
	note = {Ultimo accesso: 24 maggio 2025}
}

@misc{valgrind_rust,
	title = {{Rust and Valgrind}},
	author = {{Nicholas Nethercote}},
	howpublished = {\url{https://nnethercote.github.io/2022/01/05/rust-and-valgrind.html}},
	year = {2022},
	month = jan,
	note = {Ultimo accesso: 20 maggio 2025}
}

@inproceedings{aslr_effectiveness,
	author = {{Shacham, Hovav and Page, Matthew and Pfaff, Ben and Goh, Eu-Jin and Modadugu, Nagendra and Boneh, Dan}},
	title = {{On the effectiveness of address-space randomization}},
	year = {2004},
	isbn = {1581139616},
	publisher = {{Association for Computing Machinery}},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/1030083.1030124},
	doi = {10.1145/1030083.1030124},
	booktitle = {{Proceedings of the 11th ACM Conference on Computer and Communications Security}},
	pages = {298--307},
	numpages = {10},
	keywords = {address-space randomization, automated attacks, diversity},
	location = {Washington DC, USA},
	series = {CCS '04}
}

@inproceedings{stack_canaries,
	author = {Cowan, Crispin and Pu, Calton and Maier, Dave and Hintony, Heather and Walpole, Jonathan and Bakke, Peat and Beattie, Steve and Grier, Aaron and Wagle, Perry and Zhang, Qian},
	title = {{StackGuard: automatic adaptive detection and prevention of buffer-overflow attacks}},
	year = {1998},
	month = jan,
	publisher = {{USENIX Association}},
	address = {USA},
	booktitle = {{Proceedings of the 7th Conference on USENIX Security Symposium - Volume 7}},
	pages = {5},
	numpages = {1},
	location = {San Antonio, Texas},
	series = {SSYM'98}
}

@inproceedings{control_flow_integrity,
	author = {Abadi, Mart\'{\i}n and Budiu, Mihai and Erlingsson, \'{U}lfar and Ligatti, Jay},
	title = {{Control-flow integrity}},
	year = {2005},
	month = sep,
	isbn = {1595932267},
	publisher = {{Association for Computing Machinery}},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/1102120.1102165},
	doi = {10.1145/1102120.1102165},
	booktitle = {{Proceedings of the 12th ACM Conference on Computer and Communications Security}},
	pages = {340--353},
	numpages = {14},
	keywords = {vulnerabilities, inlined reference monitors, control-flow graph, binary rewriting},
	location = {Alexandria, VA, USA},
	series = {CCS '05}
}

% Source Code Security Analyzers - NIST
@misc{nist_sast_list,
	title = {{Source Code Security Analyzers}},
	author = {{National Institute of Standards and Technology (NIST)}},
	howpublished = {\url{https://www.nist.gov/itl/ssd/software-quality-group/source-code-security-analyzers}},
	year = {2025},
	month = mar,
	note = {Ultimo accesso: 03 giugno 2025}
}

@book{os_concepts,
	author = {{Peterson, James L. and Silberschatz, Abraham}},
	title = {{Operating system concepts (2nd ed.)}},
	year = {1985},
	publisher = {Addison-Wesley Longman Publishing Co., Inc.}
}