% The Meaning of Memory Safety
@article{meaning_memory_safety,
  author    = {{Arthur Azevedo de Amorim, Cătălin Hriţcu e Benjamin C. Pierce}},
  title     = {The Meaning of Memory Safety},
  booktitle = {Principles of Security and Trust},
  editor    = {Gilles Barthe and Cătălina Cămara and David Pichardie},
  publisher = {Springer International Publishing},
  series    = {Lecture Notes in Computer Science},
  volume    = {10804},
  pages     = {79--105},
  year      = {2018},
  doi       = {10.1007/978-3-319-89722-6_4},
  note      = {ISBN 978-3-319-89721-9},
}

% Website "The Memory Safety Continuum"
@misc{memory_safety_continuum,
  title = {{The Memory Safety Continuum}},
  author = {{Nell Shamrell-Harrington, Avishay Balter, Gabriel Dos Reis, David Edelsohn, Charles C Palmer, Joshua J. Drake, David A. Wheeler, Andrew Fryer e Rich Lander}},
  howpublished = {\url{https://memorysafety.openssf.org/memory-safety-continuum/}},
  note = {Open Source Security Foundation. Ultimo accesso: 26 maggio 2025}
}

% Definizione di Memory Safety secondo OpenSSF - The Memory Safety Continuum
@misc{memory_safety_continuum_definition,
  title = {{The Memory Safety Continuum}},
  author = {{Open Source Security Foundation (OpenSSF)}},
  howpublished = {\url{https://github.com/ossf/Memory-Safety/blob/main/docs/definitions.md}},
  note = {Ultimo accesso: 26 maggio 2025}
}

% Memory Safety Without Runtime Checks or Garbage Collection
@article{memory_safety_without_runtime_checks,
  title = {Memory Safety Without Runtime Checks or Garbage Collection},
  author = {{Dinakar Dhurjati, Sumant Kowshik, Vikram Adve e Chris Lattner}},
  journal = {LCTES03: ACM SIGPLAN Symposium on Languages, Compilers, and Tools for Embedded Systems},
  doi = {10.1145/780732.780743},
  publisher = {Association for Computing Machinery, New York, NY, USA},
  year = 2003,
  month = jun,
  note = {\url{https://dl.acm.org/doi/pdf/10.1145/780732.780743}}
}

% Microsoft "A proactive approach to more secure code" blog article
@misc{microsoft_proactive_approach,
  title = {{A proactive approach to more secure code}},
  author = {{Microsoft}},
  howpublished = {\url{https://msrc.microsoft.com/blog/2019/07/a-proactive-approach-to-more-secure-code/}},
  year = {2019},
  month = jul,
  note = {Ultimo accesso: 16 maggio 2025}
}

% "Safer with Google: Advancing Memory Safety" blog article
@misc{chromium_memory_safety,
  title = {{Safer with Google: Advancing Memory Safety}},
  author = {{Alex Rebert, Chandler Carruth, Jen Engel e Andy Qin}},
  journal = {{Google Security Blog}},
  howpublished = {\url{https://security.googleblog.com/2024/10/safer-with-google-advancing-memory.html}},
  year = 2024,
  month = oct,
  note = {Ultimo accesso: 20 maggio 2025}
}

% Heartbleed
@misc{heartbleed,
  title = {{Heartbleed}},
  author = {{Blackduck, Inc.}},
  howpublished = {\url{https://www.heartbleed.com/}},
  note = {Ultimo accesso: 19 maggio 2025}
}

% Learning Curves
@misc{learning_curves,
  author = {Mike Baxter},
  howpublished = {\url{https://www.learningcardano.com/how-long-does-it-take-to-learn-the-most-popular-programming-languages/}},
  title = {How long does it take to learn the most popular programming languages?},
  year = {2024},
  month = oct,
  note = {Ultimo accesso: 13 maggio 2025}
}

% OWASP Best Practices
@misc{owasp_best_practices,
  title = {{Secure Coding Practice Quick-reference Guide}},
  author = {{OWASP Foundation, Inc.}},
  howpublished = {\url{https://owasp.org/www-project-secure-coding-practices-quick-reference-guide/stable-en/}},
  note = {Ultimo accesso: 14 maggio 2025}
}

% SEI CERT Coding Standard
@misc{cert_coding_standard,
  title = {{SEI CERT Coding Standard}},
  author = {{Carnegie Mellon University}},
  howpublished = {\url{https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards}},
  note = {Ultimo accesso: 14 maggio 2025}
}

% CWE Top 25 Most Dangerous Software Weaknesses
@misc{cwe_top25_2024,
  author       = {{MITRE}},
  title        = {{2024 CWE Top 25 Most Dangerous Software Weaknesses}},
  howpublished = {\url{https://cwe.mitre.org/top25/archive/2024/2024_cwe_top25.html}},
  year         = {2024},
  note         = {Ultimo accesso: 15 maggio 2025},
}

% The Case for Memory Safe Roadmaps
@misc{memory_safe_roadmaps,
  title = {{The Case for Memory Safe Roadmaps}},
  author = {{United States Cybersecurity and Infrastructure Security Agency, United States National Security Agency, United States Federal Bureau of Investigation, Australian Signals Directorate's Australian Cyber Security Centre, Canadian Centre for Cyber Security, United Kingdom National Cyber Security Centre, New Zealand National Cyber Security Centre, Computer Emergency Response Team New Zealand}},
  howpublished = {\url{https://www.cisa.gov/sites/default/files/2023-12/The-Case-for-Memory-Safe-Roadmaps-508c.pdf}},
  year = {2023},
  month = dec
}

% Come il bug di Crowdstrike ha mandato in tilt i computer di mezzo mondo
@misc{crowdstrike_bug_wired,
  title = {{Come il bug di Crowdstrike ha mandato in tilt i computer di mezzo mondo}},
  author = {{Newman Lily Hay, Burgess Matt e Greenberg Andy}},
  journal = {Wired},
  howpublished = {\url{https://www.wired.it/article/crowdstrike-microsoft-guasto-come-e-successo/}},
  year = {2024},
  month = jul,
  note = {Ultimo accesso: 20 maggio 2025}
}

% Come il bug di Crowdstrike ha mandato in tilt i computer di mezzo mondo
@misc{crowdstrike_bug_wired_cost,
  title = {{Il disastro di Crowdstrike costerà 15 miliardi alle aziende}},
  author = {González Fernanda},
  journal = {Wired},
  howpublished = {\url{https://www.wired.it/article/crowdstrike-impatto-economico-bug-microsoft/}},
  year = {2024},
  month = jul,
  note = {Ultimo accesso: 20 maggio 2025}
}

@misc{wannacry_kaspersky,
  title = {{What is WannaCry ransomware?}},
  author = {{Kaspersky}},
  howpublished = {\url{https://www.kaspersky.com/resource-center/threats/ransomware-wannacry}},
  note = {Ultimo accesso: 22 maggio 2025},
}

@misc{webaudio_uaf,
  title = {{Exploiting a textbook use-after-free security vulnerability in Chrome}},
  author = {{Man Yue Mo}},
  howpublished = {\url{https://github.blog/security/vulnerability-research/exploiting-a-textbook-use-after-free-security-vulnerability-in-chrome/}},
  journal = {GitHub Blog},
  year = {2020},
  month = oct,
  note = {Ultimo accesso: 24 maggio 2025}
}

@misc{null_pointer_dereference_linux,
  title = {{Linux NULL pointer dereference due to incorrect proto\_ops initialisation}},
  author = {{Julien Tinnes e Tavis Ormandy}},
  howpublished = {\url{https://blog.cr0.org/2009/08/linux-null-pointer-dereference-due-to.html}},
  journal = {GitHub Blog},
  year = {2009},
  month = aug,
  note = {Ultimo accesso: 19 maggio 2025}
}

@misc{security_in_sdlc,
  title = {{Integration of Security Modules in Software Development Lifecycle Phases}},
  author = {{Isaac Chin Eian, Lim Ka Yong, Majesty Yeap Xiao Li, Noor Affan Bin Noor Hasmaddi e Fatima-tuz-Zahra}},
  howpublished = {\url{https://arxiv.org/pdf/2012.05540}},
  journal = {arXiv},
  year = 2020,
  month = dec
}

@article{afl_plus_plus,
  title = {{AFL++: Combining incremental steps of fuzzing research}},
  author = {{Andrea Fioraldi, Dominik Maier, Heiko Eißfeldt e Marc Heuse}},
  journal = {14th USENIX Workshop on Offensive Technologies (WOOT 20)},
  publisher = {USENIX Association},
  year = 2020,
  month = aug,
  note = {\url{https://www.usenix.org/system/files/woot20-paper-fioraldi.pdf}},
}

@article{qasan,
  title = {{Fuzzing binaries for memory safety errors with QASan}},
  author = {{Andrea Fioraldi, Daniele Cono D'Elia e Leonardo Querzoni}},
  journal = {2020 IEEE Secure Development Conference (SecDev)},
  year = 2020,
  doi = {10.1109/SecDev45635.2020.00019},
  note = {\url{https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9230171}},
}

@misc{fuzzing_types,
  title = {{Alla scoperta del Fuzzing. Come scovare vulnerabilità sconosciute nei software}},
  author = {Redazione RHC},
  howpublished = {\url{https://www.redhotcyber.com/post/alla-scoperta-del-fuzzing-come-scovare-vulnerabilita-sconosciute-nei-software/}},
  journal = {Red Hot Cyber},
  year = 2024,
  month = apr,
  note = {Ultimo accesso: 20 maggio 2025}
}

@misc{rust_manual_san,
  title = {The Rust Unstable Book},
  author = {rust-lang},
  howpublished = {\url{https://doc.rust-lang.org/beta/unstable-book/compiler-flags/sanitizer.html}},
  note = {Ultimo accesso: 24 maggio 2025},
}

@misc{valgrind_rust,
  title = {Rust and Valgrind},
  author = {Nicholas Nethercote},
  howpublished = {https://nnethercote.github.io/2022/01/05/rust-and-valgrind.html},
  year = 2022,
  month = jan,
  note = {Ultimo accesso: 20 maggio 2025},
}

@article{aslr_effectiveness,
  title = {{On the effectiveness of address-space randomization}},
  author = {{Hovav Shacham, Matthew Page, Ben Pfaff, Eu-Jin Goh, Nagendra Modadugu e Dan Boneh}},
  journal = {CCS04: 11th ACM Conference on Computer and Communications Security 2004},
  doi = {10.1145/1030083.1030124},
  publisher = {Association for Computing Machinery,New York,NY,United States},
  year = 2004,
  month = oct,
  note = {\url{https://dl.acm.org/doi/pdf/10.1145/1030083.1030124}}
}

@article{stack_canaries,
  title = {{StackGuard: automatic adaptive detection and prevention of buffer-overflow attacks}},
  author = {{Crispan Cowan, Calton Pu, Dave Maier, Jonathan Walpole, Peat Bakke, Steve Beattie, Aaron Grier, Perry Wagle e Qian Zhang}},
  journal = {Proceedings of 7th USENIX Security Symposium, San Antonio, Texas, USA},
  year = 1998,
  month = jan,
  pages = {5-5},
  volume = {98}
}

@article{control_flow_integrity,
  author = {{Martìn Abadi, Mihai Budiu, Ùlfar Erlingsson e Jay Ligatti}},
  journal = {CCS '05: Proceedings of the 12th ACM conference on Computer and communications security},
  title = {Control Flow Integrity},
  year = 2005,
  month = nov
}